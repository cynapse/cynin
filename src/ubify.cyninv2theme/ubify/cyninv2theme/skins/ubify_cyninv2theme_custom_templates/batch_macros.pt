<tal:comment replace="nothing">
cyn.in is an open source Collaborative Knowledge Management Appliance that
enables teams to seamlessly work together on files, documents and content in
a secure central environment.

cyn.in v2 an open source appliance is distributed under the GPL v3 license
along with commercial support options.

cyn.in is a Cynapse Invention.

Copyright (C) 2008 Cynapse India Pvt. Ltd.

This program is free software: you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation, either version 3 of the License, or any later version and observe
the Additional Terms applicable to this program and must display appropriate
legal notices. In accordance with Section 7(b) of the GNU General Public
License version 3, these Appropriate Legal Notices must retain the display of
the "Powered by cyn.in" AND "A Cynapse Invention" logos. You should have
received a copy of the detailed Additional Terms License with this program.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along with
this program.  If not, see http://www.gnu.org/licenses/.

You can contact Cynapse at support@cynapse.com with any problems with cyn.in.
For any queries regarding the licensing, please send your mails to
 legal@cynapse.com

You can also contact Cynapse at:
802, Building No. 1,
Dheeraj Sagar, Malad(W)
Mumbai-400064, India
</tal:comment>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      i18n:domain="cynin">
<body>

<!-- Navigation -->
<div class="paging_bar"
     metal:define-macro="navigation"
     tal:define="request request|here/request|container/request|nothing;
                 batch batch|nothing;
                 template_id template_id|template/getId;
                 mq python:modules['ZTUtils'].make_query;
                 url batch_base_url | string:${here/absolute_url}/${template_id};
                 currentpage batch/pagenumber|nothing;
		 bnext batch/next|nothing;
		 bprev batch/previous|nothing"
     tal:condition="python: bnext or  bprev">
<!-- TODO tesdal needs to have a look at these
    <metal:rellinks fill-slot="rel_slot">
        <link rel="first" href="" title="First page" tal:attributes="href string:author" />
        <link rel="last" href="" title="Last page" tal:attributes="href string:author" />
        <link rel="previous" href="" title="Previous page" tal:attributes="href string:author" />
        <link rel="next" href="" title="Next page" tal:attributes="href string:author" />
    </metal:rellinks>
-->
    <span class="previous"
      tal:define="p batch/previous | nothing"
      tal:condition="p">
        <a href=""
           tal:attributes="href python: '%s?%s' % (url , mq( request.form, {batch.b_start_str:p.first} ))">
           &laquo;
           <span i18n:translate="batch_previous_x_items" >
               Previous
               <span i18n:name="number" tal:content="p/length">n</span>
               items
           </span>
        </a>
    </span>


    <!-- Link to first -->
    <span tal:condition="python: 1 not in batch.navlist">
        <a href=""
           tal:attributes="href python: '%s?%s' % (url, batch.pageurl(request.form,1));">1</a>
        <span tal:condition="python: 2 not in (batch.prevlist or batch.leapback)"
              >
           ...
        </span>
    </span>

    <!-- Pagelist with quantum leap links to previous pages for quick navigation -->
    <span tal:repeat="linklist python:batch.navurls(request.form, batch.leapback)"
          tal:condition="batch/leapback"
          >
        <a href=""
           tal:define="page python:linklist[0];
                       query python:linklist[1];"
           tal:content="page"
           tal:attributes="href python: '%s?%s' % (url,query)" >
        </a>
        ...
    </span>

    <!-- Pagelist with links to previous pages for quick navigation -->
    <span tal:repeat="linklist python:batch.prevurls(request.form)"
          tal:condition="batch/prevlist"
          >
        <a href=""
           tal:define="page python:linklist[0];
                       query python:linklist[1];"
           tal:content="page"
           tal:attributes="href python: '%s?%s' % (url,query)" >
        </a>
    </span>

    <!-- Current page -->
    <span tal:condition="batch/navlist"
          class="paging_bar_currentpage"
          ><span tal:content="batch/pagenumber">Current page number</span></span>

    <!-- Pagelist with links to next pages for quick navigation -->
    <span tal:repeat="linklist python:batch.nexturls(request.form)"
          tal:condition="batch/nextlist"
          >
        <a href=""
           tal:define="page python:linklist[0];
                       query python:linklist[1];"
           tal:content="page"
           tal:attributes="href python: '%s?%s' % (url,query)" >
        </a>
    </span>

    <!-- Pagelist with quantum leap links to next pages for quick navigation -->
    <span
          tal:repeat="linklist python:batch.navurls(request.form, batch.leapforward)"
          tal:condition="batch/leapforward"
          >
        <span class="paging_bar_ellipsis">...</span>
        <a href=""
           tal:define="page python:linklist[0];
                       query python:linklist[1];"
           tal:content="page"
           tal:attributes="href python: '%s?%s' % (url,query)" >
        </a>
    </span>

    <!-- Link to last -->
    <span tal:condition="python:batch.numpages not in batch.navlist">
        <span tal:condition="python: batch.numpages - 1 not in (batch.nextlist or batch.leapforward)"
              >
        <span class="paging_bar_ellipsis">...</span>
        </span>
        <a href=""
           tal:attributes="href python: '%s?%s' % (url,batch.pageurl(request.form,batch.numpages));"
           tal:content="batch/numpages">3457</a>
    </span>
    <span class="next"
      tal:define="n batch/next | nothing"
      tal:condition="n">
        <a href=""
           tal:attributes="href python: '%s?%s' % (url , mq( request.form, {batch.b_start_str:n.first} ))">
           <span i18n:translate="batch_next_x_items" >
               Next
               <span i18n:name="number" tal:content="n/length">n</span>
               items
           </span>
           &raquo;
        </a>
    </span>
</div>

</body>
</html>
