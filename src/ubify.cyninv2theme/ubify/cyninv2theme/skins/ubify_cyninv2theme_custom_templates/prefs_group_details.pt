<tal:comment replace="nothing">
cyn.in is an open source Collaborative Knowledge Management Appliance that
enables teams to seamlessly work together on files, documents and content in
a secure central environment.

cyn.in v2 an open source appliance is distributed under the GPL v3 license
along with commercial support options.

cyn.in is a Cynapse Invention.

Copyright (C) 2008 Cynapse India Pvt. Ltd.

This program is free software: you can redistribute it and/or modify it under
the terms of the GNU General Public License as published by the Free Software
Foundation, either version 3 of the License, or any later version and observe
the Additional Terms applicable to this program and must display appropriate
legal notices. In accordance with Section 7(b) of the GNU General Public
License version 3, these Appropriate Legal Notices must retain the display of
the "Powered by cyn.in" AND "A Cynapse Invention" logos. You should have
received a copy of the detailed Additional Terms License with this program.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
Public License for more details.

You should have received a copy of the GNU General Public License along with
this program.  If not, see http://www.gnu.org/licenses/.

You can contact Cynapse at support@cynapse.com with any problems with cyn.in.
For any queries regarding the licensing, please send your mails to
 legal@cynapse.com

You can also contact Cynapse at:
802, Building No. 1,
Dheeraj Sagar, Malad(W)
Mumbai-400064, India
</tal:comment>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en"
      xmlns:tal="http://xml.zope.org/namespaces/tal"
      xmlns:metal="http://xml.zope.org/namespaces/metal"
      xmlns:i18n="http://xml.zope.org/namespaces/i18n"
      lang="en"
      metal:use-macro="here/prefs_main_template/macros/master"
      i18n:domain="cynin">

<metal:block fill-slot="top_slot"
             tal:define="dummy python:request.set('disable_border',1)" />

<body>
<tal:titlebarslot metal:fill-slot="titlebar-row1">
    <div id="maintitleholder"
    tal:define="groupname request/groupname | nothing;
                gtool context/portal_groups;
                 group python:gtool.getGroupById(groupname);
                 grouptitle group/getGroupTitleOrName | nothing;">
        <h1 id="maintitle" tal:condition="not:group | nothing"
            class="documentFirstHeading"
            i18n:translate="heading_create_group">Create a Group</h1>
        <h1 id="maintitle" tal:condition="group | nothing"
            class="documentFirstHeading">
            Edit Group Properties for
            <tal:title tal:content="grouptitle | default"/>
        </h1>

    </div>
</tal:titlebarslot>

<div metal:fill-slot="author_slot"
    tal:define="errors python:request.get('errors', {});
                 portal_roles mtool/getPortalRoles;
                 mq python:modules['ZTUtils'].make_query;
                 groupname request/groupname | nothing;
                 groupquery python:mq(groupname=groupname);
                 groupkeyquery python:mq(key=groupname);
                 grouproles python:request.set('grouproles', []);
                 gtool context/portal_groups;
                 group python:gtool.getGroupById(groupname);
                 grouptitle group/getGroupTitleOrName | nothing">
    <ul class="contentViews">
      <li class="forcelink">
        <a href=""
           tal:attributes="href string:$here_url/prefs_group_members?${groupquery}"
           i18n:translate="label_group_members">Group Members</a>
      </li>
      <li class="selected forcelink">
        <a href=""
           tal:attributes="href string:$here_url/${template_id}?${groupquery}"
           i18n:translate="label_group_properties">Group Properties</a>
      </li>
    </ul>
</div>
<div metal:fill-slot="prefs_configlet_main"
     tal:define="errors python:request.get('errors', {});
                 portal_roles mtool/getPortalRoles;
                 mq python:modules['ZTUtils'].make_query;
                 groupname request/groupname | nothing;
                 groupquery python:mq(groupname=groupname);
                 groupkeyquery python:mq(key=groupname);
                 grouproles python:request.set('grouproles', []);
                 gtool context/portal_groups;
                 group python:gtool.getGroupById(groupname);
                 grouptitle group/getGroupTitleOrName | nothing">

    <tal:conditional condition="group">
        <tal:defines define="dummy python:request.set('grouproles', group.getRoles())" />
    </tal:conditional>

      <div class="documentEditable">
    <!-- simulating views on the groups/user pages until we have real objects. -->


    <div id="region-content" class="documentContent">
      <a name="documentContent"></a>

      <div metal:use-macro="here/global_statusmessage/macros/portal_message">
        Portal status message
      </div>

      <!-- When no group is specified, this gets used as the add group page page -->
      <div id="content" tal:condition="not:group | nothing">
        <metal:block metal:use-macro="template/macros/props">
          <metal:name metal:fill-slot="name">
        <div class="field">
               <label for="addname" i18n:translate="label_name">Name</label>

               <span class="fieldRequired" title="Required"
                     i18n:attributes="title title_required;"
                     i18n:translate="label_required">(Required)</span>

                <div class="formHelp" i18n:translate="help_groupname">
                A unique identifier for the group. Can not be changed after creation.
                </div>

               <input type="text" name="addname" value="groupname"
                      id="addname"
                      tal:attributes="value group/getGroupName | string:"/>
        </div>
          </metal:name>
        </metal:block>
      </div>

      <div class="configlet" tal:condition="group | nothing">
            <metal:block metal:define-macro="props" tal:omit-tag="">

        <p i18n:translate="description_edit_groupproperties">
        Groups are logical collections of users, like departments and business units.
        They are not directly related to permissions on a global level, you normally
        use Roles for that - and let certain Groups have a particular role.
        </p>

        <form action=""
              name="groups"
              method="post"
              class="enableUnloadProtection enableAutoFocus"
              tal:attributes="action string:${gtool/absolute_url}"
              tal:define="targetobject context/portal_groupdata;
                          targetGetProperty nocall:group/getProperty | nocall:here/returnNone;">

            <fieldset class="contentheaderlabel">
                <legend i18n:translate="link_group_properties">Group Properties</legend>

                <div class="field" metal:define-slot="name">
                   <label for="groupname" i18n:translate="label_name">Name: <tal:groupname tal:content="group/getGroupName | string:" /></label>

                   <input type="hidden" name="groupname" value="groupname" id="groupname"
                                 tal:attributes="value group/getGroupName | string:"/>
                </div>

                 <tal:set tal:condition="targetobject/management_page_charset|nothing"
                          tal:define="dummy python:request.set('management_page_charset_tag','')" />

                 <tal:set tal:condition="not:targetobject/management_page_charset|nothing">
                    <tal:defines define="dummy python:request.set('management_page_charset','UTF-8');
                                         dummy python:request.set('management_page_charset_tag','UTF-8:');" />
                 </tal:set>

                <tal:properties repeat="property targetobject/propertyMap">
                    <span tal:condition="python:property['id'] != 'listed'" tal:omit-tag="">
                        <div class="field"
                             tal:define="id property/id;
                                         type property/type;
                                         propertyvalue python:targetGetProperty(id, None);">

                        <label for="value"
                                tal:attributes="for id"
                                i18n:translate=""
                                tal:content="python:targetobject.propertyLabel(id).capitalize()">Property Value</label>

                        <div tal:define="propertyitem python:targetobject.getProperty(id);
                                         disabled python:(not group or group.canWriteProperty(id)) and default or 'disabled';"
                        tal:condition="python:'w' in property.get('mode', 'awd')">

                        <input type="text" name="id" size="35"
                                tal:condition="python:type in ('int', 'long')"
                                tal:attributes="name string:$id:$type;
                                                id id;
                                                value python:test(propertyvalue, propertyvalue, '');
                                                disabled disabled;" />

                        <input type="text" name="id" size="35"
                                tal:condition="python:type in ('float','date')"
                                tal:attributes="name string:$id:${request/management_page_charset_tag}$type;
                                                id id;
                                                value python:test(propertyvalue, propertyvalue, '');
                                                disabled disabled;" />

                        <input type="text" name="string and ustring" size="35"
                                tal:condition="python:type in ('string','ustring')"
                                tal:attributes="name string:$id:${request/management_page_charset_tag}$type;
                                                id id;
                                                value python:test(propertyvalue, propertyvalue, '');
                                                disabled disabled;" />

                        <input type="checkbox"
                                class="noborder"
                                name="id"
                                id="cb-checkbox"
                                tal:condition="python: type in ('boolean',)"
                                tal:attributes="name string:$id:$type;
                                                id id;
                                                checked python:test(propertyvalue, 'checked', '');
                                                disabled disabled;" />

                        <input name="tokens and utokens" value="" type="text" size="35"
                                tal:condition="python:type in ('tokens', 'utokens')"
                                tal:attributes="name string:$id:${request/management_page_charset_tag}$type;
                                                value python:test(propertyvalue, propertyvalue, '');
                                                disabled disabled;" />

                        <textarea name="text and utext"
                                rows="6"
                                cols="35"
                                tal:condition="python: type in ('text', 'utext')"
                                tal:attributes="name string:$id:${request/management_page_charset_tag}$type;
                                                disabled disabled;"
                                tal:content="propertyvalue">some data</textarea>

                        <textarea name="lines and ulines"
                                rows="6"
                                cols="35"
                                tal:condition="python: type in ('lines', 'ulines')"
                                tal:attributes="name string:$id:${request/management_page_charset_tag}$type;;
                                                disabled disabled;"
                                tal:content="python: '\n'.join(propertyvalue)">
                        </textarea>


                        <tal:selections tal:condition="python:type in ('selection', 'multiple selection')"
                                        tal:define="select_variable python:property.get('select_variable','');
                                        select_value python:select_variable and path('here/%s' %select_variable) or [];">

                        <select name="selection" tal:condition="python:type in ('selection',)"
                            tal:attributes="name string:$id:${request/management_page_charset_tag}text;
                                            disabled disabled;">
                            <tal:values repeat="option select_value">
                                <option tal:attributes="SELECTED python:test(propertyvalue==option,'SELECTED','')"
                                    tal:content="option">value</option>
                            </tal:values>
                        </select>

                        <select name="multiple selection" multiple="multiple" tal:condition="python:type in ('multiple selection',)"
                                tal:attributes="name string:$id:${request/management_page_charset_tag}list:string;
                                                size python:min(7, len(select_value));
                                                disabled disabled;">
                            <tal:values repeat="option select_value">
                                <option tal:attributes="SELECTED python:test(propertyvalue and option in propertyvalue,
                                                                            'selected', '')"
                                        tal:content="option">value</option>
                            </tal:values>
                        </select>

                        </tal:selections>

                        </div>

                        </div>
                    </span>
                </tal:properties>

                <div class="formControls">
                    <input class="context"
                           type="submit"
                           name="prefs_group_edit:method"
                           value="Save"
                           i18n:attributes="value label_save;" />
                </div>
            </fieldset>
        </form>

        </metal:block>


    </div>

</div>

</div>

</div>

</body>
</html>
